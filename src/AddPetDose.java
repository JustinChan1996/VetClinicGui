
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Justin
 */
public class AddPetDose extends javax.swing.JDialog {
    
    /* declare pet object */
    Pet pet;
    /* Declare arraylist of dose objects */
    private ArrayList<Dose> doses = new ArrayList();
    /* Assign table model */
    /* Declare custom table model */
    DoseTableModel model = new DoseTableModel(getDoses());
    
    /**
     * Creates new form AddPetDose
     */
    public AddPetDose(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        DoseTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DoseTable = new javax.swing.JTable();
        AdministerDrug = new javax.swing.JButton();
        Exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        DoseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(DoseTable);

        AdministerDrug.setText("Administer drug");
        AdministerDrug.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdministerDrugMouseClicked(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(AdministerDrug)
                        .addGap(18, 18, 18)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AdministerDrug)
                    .addComponent(Exit))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // Exit the dialog
        dispose();
    }//GEN-LAST:event_ExitMouseClicked

    private void AdministerDrugMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministerDrugMouseClicked
        // Open up a dialog box to add drug dosage of the pet
        this.addDosage();
        
 
    }//GEN-LAST:event_AdministerDrugMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPetDose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPetDose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPetDose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPetDose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddPetDose dialog = new AddPetDose(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdministerDrug;
    private javax.swing.JTable DoseTable;
    private javax.swing.JButton Exit;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the doses
     */
    public Pet getPet() {
        return pet;
    }

    /**
     * @param doses the doses to set
     */
    public void setPet(Pet pet) {
        this.pet = pet;
        this.setDoses(pet.getDoses());
    }

    /**
     * @return the doses
     */
    public ArrayList<Dose> getDoses() {
        return doses;
    }

    /**
     * @param doses the doses to set
     */
    public void setDoses(ArrayList<Dose> doses) {
        this.doses = doses;
        /* update the model with doese */
        for(int i = 0 ; i < doses.size(); i = i + 1)
        {
            model.add(getDoses().get(i));
        }
        
    }
    
    /**
     * Method to open up a dialog box to add drug details of a pet
     */
    public void addDosage()
    {
        // Opens up the dialog to administer the drug based on the name 
        String drugName = JOptionPane.showInputDialog("Please enter drug name: ");
        // only administer drug if drug name is not null 
        if(!(drugName.equals("")))
        {
            /* set date to current date */
            Date date = new Date();
            /* create dose object */
            Dose dose = new Dose(drugName, date, pet.getDose());
            JOptionPane.showMessageDialog(null, dose.toString());
            /* update table */
            model.add(dose);
            /* update pet object */
            pet.addDoses(dose);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No drug is administered to the pet");
        }
    }

 
}
