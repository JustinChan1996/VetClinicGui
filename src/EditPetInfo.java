
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Justin
 */
public class EditPetInfo extends javax.swing.JDialog {
    
    /* Declare pet object */
    private Pet pet;
    
    /* Declare attributes that can be edited */
    private double weight;
    private String name;
    private String breed;
    private boolean allergic;
    
    /* flag to indicate the last button clicked before the form is disposed */
    /* if the flag is 0, the last button clicked is confirm */
    /* if the flag is 1, the last button clicked is exit */
    private int btnflag = 0;
    
    /**
     * Creates new form EditPetInfo
     */
    public EditPetInfo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtnCat = new javax.swing.JRadioButton();
        btnExit = new javax.swing.JButton();
        lblDogBreed = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        txtDogBreed = new javax.swing.JTextField();
        DatePicker = new org.jdesktop.swingx.JXDatePicker();
        lblAllergy = new javax.swing.JLabel();
        chkboxYes = new javax.swing.JCheckBox();
        lblPetName = new javax.swing.JLabel();
        txtPetName = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblPetType = new javax.swing.JLabel();
        lblDateofBirth = new javax.swing.JLabel();
        rbtnDog = new javax.swing.JRadioButton();
        btnRegister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rbtnCat.setText("Cat");
        rbtnCat.setEnabled(false);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lblDogBreed.setText("Dog breed:");

        btnReset.setText("Reset fields");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });

        txtDogBreed.setEnabled(false);

        DatePicker.setEditable(false);
        DatePicker.setEnabled(false);

        lblAllergy.setText("Presence of allergy:");

        chkboxYes.setText("Yes");
        chkboxYes.setEnabled(false);
        chkboxYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxYesActionPerformed(evt);
            }
        });

        lblPetName.setText("Pet Name:");

        lblWeight.setText("Weight(kg):");

        lblPetType.setText("Type of pet:");

        lblDateofBirth.setText("Date of birth:");

        rbtnDog.setSelected(true);
        rbtnDog.setText("Dog");
        rbtnDog.setEnabled(false);

        btnRegister.setText("Confirm changes");
        btnRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegisterMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDateofBirth)
                            .addComponent(lblWeight)
                            .addComponent(lblPetName)
                            .addComponent(lblAllergy)
                            .addComponent(lblDogBreed)
                            .addComponent(lblPetType))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(rbtnDog)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnCat))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(chkboxYes)
                                        .addComponent(txtDogBreed)
                                        .addComponent(txtPetName, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                        .addComponent(txtWeight)))))
                        .addGap(0, 69, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(btnRegister)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPetType)
                    .addComponent(rbtnDog)
                    .addComponent(rbtnCat))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPetName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDogBreed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDogBreed))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkboxYes)
                    .addComponent(lblAllergy))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateofBirth)
                    .addComponent(DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btnExit)
                    .addComponent(btnReset))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        setBtnflag(1);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // undo all changes to the input field 
        this.reset();
    }//GEN-LAST:event_btnResetMouseClicked

    private void chkboxYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkboxYesActionPerformed

    private void btnRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegisterMouseClicked
        // Set the attribute of the pet based on the input boxes
        this.confirmPetData();
        // Set the button flag to 1;
        setBtnflag(0);
        dispose();
    }//GEN-LAST:event_btnRegisterMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditPetInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditPetInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditPetInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditPetInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditPetInfo dialog = new EditPetInfo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /**
     * @return the weight
     */
    public double getWeight() {
        return weight;
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @return the breed
     */
    public String getBreed() {
        return breed;
    }
    
    /**
     * @return the allergic
     */
    public boolean isAllergic() {
        return allergic;
    }
    
    /**
     * @param weight the weight to set
     */
    public void setWeight(double weight) {
        this.weight = weight;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @param breed the breed to set
     */
    public void setBreed(String breed) {
        this.breed = breed;
    }

    /**
     * @param allergic the allergic to set
     */
    public void setAllergic(boolean allergic) {
        this.allergic = allergic;
    }
    
    /**
     * @return the pet
     */
    public Pet getPet() {
        return pet;
    }
    
    /**returns the  to indicate the last button pressed before the form is disposed. Set the flag to 0 if the button clicked is confirm, 1 id the button clicked is exit
     * @return the button flag
     *  
     */
    public int getBtnflag() {
        return btnflag;
    }

    /**
     * Set the flag to indicate the last button pressed before the form is disposed. Set the flag to 0 if the button clicked is confirm, 1 id the button clicked is exit
     * @param btnflag the button flag 
     */
    public void setBtnflag(int btnflag) {
        this.btnflag = btnflag;
    }

    /**
     * @param pet Set the attributes of the textbox based on the pet object attributes
     */
    public void setPet(Pet pet) {
        this.pet = pet;
        txtPetName.setText(getPet().getName());
        txtWeight.setText(Double.toString(getPet().getWeight()));
        DatePicker.setDate(getPet().getDob());
        
        /* Check the class of the pet object */
        if(pet instanceof Dog)
        {
            /* Select checkbox as dog */
            rbtnDog.setSelected(true);
            /* Set the breed textbox to enabled */
            txtDogBreed.setEnabled(true);
            /* fill up the box with data */
            txtDogBreed.setText(((Dog) pet).getBreed());
            
            
        }
        else
        {
            /* Select checkbox as cat */
            rbtnCat.setSelected(true);
            /* Set the allergy checkbox to enabled */
            chkboxYes.setEnabled(true);
            /* Set the allergy status of the pet */
            if(((Cat) pet).isAllergic())
            {
                chkboxYes.setSelected(true);
            }
            
        }
    }
    /**
     * Method to undo all changes to the input text fields
     */
    public void reset()
    {
        this.setPet(pet);
    }
    
    /**
     * Method to set the attribute based on the user input 
     */
    public void confirmPetData()
    {
        /* Set attribute based on textbox data */
        setWeight(Double.parseDouble(txtWeight.getText()));
        setName(txtPetName.getText());
        setBreed(txtDogBreed.getText());
        if(chkboxYes.isSelected())
        {
            setAllergic(true);
        }
        else
        {
            setAllergic(false);
        }
        JOptionPane.showMessageDialog(null, "Pet attributes successfully edited");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker DatePicker;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox chkboxYes;
    private javax.swing.JLabel lblAllergy;
    private javax.swing.JLabel lblDateofBirth;
    private javax.swing.JLabel lblDogBreed;
    private javax.swing.JLabel lblPetName;
    private javax.swing.JLabel lblPetType;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JRadioButton rbtnCat;
    private javax.swing.JRadioButton rbtnDog;
    private javax.swing.JTextField txtDogBreed;
    private javax.swing.JTextField txtPetName;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    

    

    

}
